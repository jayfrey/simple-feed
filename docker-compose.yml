version: "3.7"

services:
  crawler:
    build:
      context: ./crawler
    volumes:
      - ./crawler:/app
    # Uncomment the following line to have the service stay alive
    # stdin_open: true
    # tty: true
    environment:
      - MONGO_URI=mongodb://admin:abc@mongo:27017
      - MONGO_DB=scraped_data
      - POSTGRES_DETAILS=dbname=simple_news_feed user=admin password=abc host=postgres
    networks:
      - simple_news_feed
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: abc
    expose:
      - 27017
    ports:
      - 28000:27017
    volumes:
      - mongo_data:/db
    networks:
      - simple_news_feed
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/simple_news_feed --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  sqitch:
    image: sqitch/sqitch:1.3.0
    volumes:
      - ./sqitch:/repo
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - simple_news_feed

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=abc
      - POSTGRES_DB=simple_news_feed
    expose:
      - 5432
    ports:
      - 65432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - simple_news_feed
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U admin -d simple_news_feed'"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  api:
    build:
      context: ./api
    volumes:
      - ./api:/app
      - /app/node_modules
    ports:
      - 3000:3000
    command: ["yarn", "start:dev"]
    networks:
      - simple_news_feed
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 10s
      timeout: 20s
      retries: 5

  # web:
  #   build:
  #     context: ./web
  #   volumes:
  #     - ./web/nginx.conf:/etc/nginx/conf.d/default.conf
  #   networks:
  #     - simple_news_feed
  #   ports:
  #     - 80:80

volumes:
  mongo_data:
  postgres_data:

networks:
  simple_news_feed: